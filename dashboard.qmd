---
title: "Dashboard - Intervenção AVC"
format: 
  dashboard:
    scrolling: true 
    orientation: columns
logo: images/ensp_logo1.png
fig-width: 10
fig-height: 5
fig-asp: 0.5
editor_options: 
  chunk_output_type: console
---

```{r}
#| label: load-packages
#| message: false
#| warning: false
#| echo: false
#| include: false

# Lista de pacotes
packages <- c(
                "janitor", 
                "tidyverse", 
                "rio", 
                "data.table", 
                "ggplot2", 
                "downloadthis", 
                "DT", 
                "leaflet", 
                "scales", 
                "plotly", 
                "sf", 
                "gt", 
                "skimr", 
                "sysfonts", 
                "ggiraph", 
                "echarts4r",
                "DataExplorer", 
                "readxl", 
                "gtsummary", 
                "broom",
                "terra",
                "flextable"
                )


# Instala pacotes que ainda não estão instalados
packages_to_install <- packages[!packages %in% installed.packages()[, "Package"]]
if(length(packages_to_install) > 0) {
  install.packages(packages_to_install)
}

# Função para carregar os pacotes
lapply(packages, library, character.only = TRUE)

```

```{r}
#| message: false
#| warning: false
#| echo: false
#| results: hide

inquerito_AVC_2024 <- read_excel("datasets/inquerito_AVC_2024_processed.xlsx") |> 
  clean_names()

names(inquerito_AVC_2024)


#Adicionar a coluna 
inquerito_AVC_2024 <- inquerito_AVC_2024 %>%
  add_row(altura_questionario = "Pré-Intervenção",
          ucc = "D",
          sexo = NA,
          agrupamento_escolas = "D3",
          orgao_afetado = "Sem resposta",
          sim_fs = NA,
          desvio_face = NA,
          dificuldade_fala = NA,
          falta_forca_braco = NA,
          imediatamente_avc = NA, 
          fr_fumar = NA,
          fr_sal_gorduras = NA,
          fr_sem_atividade = NA, 
          fator_risco_avc_todos = NA, 
          numero_emergencia = NA
          )

#ordenar sempre a altura do questionário

inquerito_AVC_2024$altura_questionario <- factor(inquerito_AVC_2024$altura_questionario, 
                                                  levels = c("Pré-Intervenção", "Pós-intervenção")) 

```

#  {.sidebar}

Este dashboard mostra estatísticas de uma intervenção no âmbito da Saúde Escolar:

|                           |                             |
|---------------------------|-----------------------------|
| **Tipo de Cuidados**      | Cuidados de Saúde Primários |
| **Desagregação**          | ACES                        |
| **Âmbito da Intervenção** | AVC                         |

------------------------------------------------------------------------

::: {.callout-note collapse="true"}
## Nota

Estes dados são reais e confidenciais. Não devem ser partilhados

São propriedade intelectual da USP do extinto ACES Maia/Valongo.
:::

# Resumo da Intervenção

## Row {height="90%"}

```{r}
#| content: valuebox
#| title: "Questionários aplicados"
#| message: false
#| warning: false
list(
  icon = "person-circle",
  color = "primary",
  value = 2137
)
```

```{r}
#| content: valuebox
#| title: "Nº escolas"
#| message: false
#| warning: false
list(
  icon = "pencil",
  color = "secondary",
  value = 12
)
```

```{r}
#| content: valuebox
#| title: "Nº UCC"
#| message: false
#| warning: false
list(
  icon = "file-medical",
  color = "light",
  value = 5
)
```


# Intervenção {orientation="columns"}

## Column

```{r}

#| title: Respostas obtidas pelas UCC's
#| message: false
#| warning: false

# Agrupar e resumir dados
combined_data <- inquerito_AVC_2024 %>%
  group_by(altura_questionario, ucc, agrupamento_escolas) %>%
  summarise(count = n(), .groups = "drop")


# Inicializar a figura
fig_agrup <- plot_ly()

# Obter listas únicas de UCC e Agrupamentos de Escolas
uccs <- unique(combined_data$ucc)
agrupamentos <- unique(combined_data$agrupamento_escolas)

# Adicionar cada combinação UCC + Agrupamento como um *trace* separado
for (i in seq_along(uccs)) {
  for (j in seq_along(agrupamentos)) {
    data_trace <- combined_data %>% 
      filter(ucc == uccs[i] & agrupamento_escolas == agrupamentos[j])
    
    fig_agrup <- fig_agrup %>% 
      add_trace(
        data = data_trace,
        x = ~altura_questionario, 
        y = ~count, 
        type = 'bar', 
        name = paste(agrupamentos[j]),
        text = ~paste(count),
        textposition = 'auto',
        hoverinfo = 'text',
        color = ~agrupamento_escolas,  # Agrupamentos usados para diferenciar cores
        colors = c("A1" = "#B0C4DE", 
                   "A2" = "#CAE1FF", 
                   "B1" = "#87CEFA", 
                   "B2" = "#A4D3EE", 
                   "C1" = "#FFA07A", 
                   "C2" = "#FFA07A", 
                   "C3" = "#EE9572", 
                   "D1" = "#DEDEDE", 
                   "D2" = "#CFCFCF", 
                   "D3" = "#CDC9C9", 
                   "D4" = "#8B8989", 
                   "E1" = "pink", 
                   "E2" = "pink3", 
                   "E3" = "pink4"),
        visible = ifelse(i == 1, TRUE, FALSE)  # Exibir apenas a primeira UCC no início
      )
  }
}

# Configurar o layout e o menu dropdown
fig_agrup <- fig_agrup %>%
  layout(
    title = "Respostas Obtidas pelas UCC's",
    xaxis = list(title = "Altura do Questionário"),
    yaxis = list(title = "Contagem de respostas"),
    barmode = 'group',
    
    # Menu para selecionar UCC
    updatemenus = list(
      list(
        type = "dropdown",
        active = 0,
        buttons = lapply(seq_along(uccs), function(i) {
          list(
            method = "update",
            args = list(
              list(visible = rep(uccs[i] == uccs, each = length(agrupamentos))),
              list(title = paste("Respostas obtidas pela UCC", uccs[i]))
            ),
            label = paste("UCC", uccs[i])
          )
        }) %>% append(list(
                           list(
                                method = "update",
                                args = list(
                                            list(visible = rep(TRUE, 
                                              length(uccs) * length(agrupamentos))),
                      list(title = "Respostas obtidas por todas as UCC's")),
            label = "Todas as UCC's")
        ))
      )
    ),
    showlegend = TRUE,
     legend = list(title = list(
                                text = "Agrupamentos de Escolas",  # Título da legenda
                                font = list(size = 14),
                                side = "top")))


fig_agrup
```


# Respostas ao questionário {orientation="row"}

## Row {width="50%"}
```{r}

#| title: Qual o orgão afetado pelo AVC?
#| message: false
#| warning: false

# Processamento dos dados
orgao <- inquerito_AVC_2024 %>%
  mutate(cerebro = ifelse(orgao_afetado == "Cérebro", "Cérebro", "Outra resposta")) %>%
  group_by(altura_questionario, ucc, agrupamento_escolas) %>%
  summarise(
    total_respostas = n(),
    cerebro_count = sum(cerebro == "Cérebro"),
    cerebro_percent = round(cerebro_count / total_respostas * 100, 1),
    .groups = "drop"
  )

fig_orgao <- plot_ly()

# Obter todas as combinações de UCC e agrupamento de escolas
uccs <- unique(orgao$ucc)
agrupamentos <- unique(orgao$agrupamento_escolas)

# Adicionar cada combinação UCC + Agrupamento como um *trace* separado
for (i in seq_along(uccs)) {
  for (j in seq_along(agrupamentos)) {
    data_trace <- orgao %>% 
      filter(ucc == uccs[i] & agrupamento_escolas == agrupamentos[j])
    
    fig_orgao <- fig_orgao %>% 
      add_trace(
        data = data_trace,
        x = ~altura_questionario, 
        y = ~cerebro_count, 
        type = 'bar', 
        name = paste(agrupamentos[j]),
        text = ~paste(round(cerebro_percent, 1), "%"),
        textposition = 'auto',
        hoverinfo = 'text',
        color = ~agrupamento_escolas,  # Agrupamentos usados para diferenciar cores
                  colors = c("A1" = "#B0C4DE", 
                             "A2" = "#CAE1FF", 
                             "B1" = "#87CEFA", 
                             "B2" = "#A4D3EE", 
                             "C1" = "#FFA07A", 
                             "C2" = "#FFA07A", 
                             "C3" = "#EE9572", 
                             "D1" = "#DEDEDE", 
                             "D2" = "#CFCFCF", 
                             "D3" = "#CDC9C9", 
                             "D4" = "#8B8989", 
                             "E1" = "pink", 
                             "E2" = "pink3", 
                             "E3" = "pink4"),
        visible = ifelse(i == 1, TRUE, FALSE)  # Exibir apenas a primeira UCC no início
      )
  }
}

# Configurar apenas o menu dropdown para selecionar UCC
fig_orgao <- fig_orgao %>%
  layout(
    title = "Qual o órgão afetado pelo AVC?",
    xaxis = list(title = "Altura do Questionário"),
    yaxis = list(title = "Percentagem de respostas corretas"),
    barmode = 'group',
    
    # Menu para selecionar UCC
    updatemenus = list(
      list(
        type = "dropdown",
        active = 0,
        buttons = lapply(seq_along(uccs), function(i) {
          list(
            method = "update",
            args = list(
              list(visible = rep(uccs[i] == uccs, each = length(agrupamentos))),
              list(title = paste("Respostas corretas obtidas pela UCC", uccs[i]))
            ),
            label = paste("UCC", uccs[i])
          )
        }) %>% append(list(
                           list(
                                method = "update",
                                args = list(
                                            list(visible = rep(TRUE, 
                                              length(uccs) * length(agrupamentos))),
                      list(title = "Respostas corretas obtidas por todas as UCC's")),
            label = "Todas as UCC's")
        ))
      )
    ),
    showlegend = TRUE,
     legend = list(title = list(
                                text = "Agrupamentos de Escolas",  # Título da legenda
                                font = list(size = 14),
                                side = "top")))


fig_orgao



```

### Column {width="55%"} 
```{r}

#| title: Quais os sinais e sintomas de um AVC?
#| message: false
#| warning: false



```

### Column {width="25%"}
```{r}

#| title: O que fazer quando detetamos um AVC?
#| message: false
#| warning: false



```

### Column {width="25%"}
```{r}

#| title: Quais os fatores de risco do AVC?
#| message: false
#| warning: false



```

## Row {width="50%"}
```{r}

#| title: Qual o número que devemos ligar para uma emergência?
#| message: false
#| warning: false


# Processamento dos dados
ambulancia <- inquerito_AVC_2024 %>%
  mutate(ambulancia = ifelse(numero_emergencia == "112", "112", "Outra resposta")) %>%
  group_by(altura_questionario, ucc, agrupamento_escolas) %>%
  summarise(
    total_respostas = n(),
    ambulancia_count = sum(ambulancia == "112"),
    ambulancia_percent = round(ambulancia_count / total_respostas * 100, 1),
    .groups = "drop"
  )

fig_ambulancia <- plot_ly()

# Obter todas as combinações de UCC e agrupamento de escolas
uccs <- unique(ambulancia$ucc)
agrupamentos <- unique(ambulancia$agrupamento_escolas)

# Adicionar cada combinação UCC + Agrupamento como um *trace* separado
for (i in seq_along(uccs)) {
  for (j in seq_along(agrupamentos)) {
    data_trace <- ambulancia %>% 
      filter(ucc == uccs[i] & agrupamento_escolas == agrupamentos[j])
    
    fig_ambulancia <- fig_ambulancia %>% 
      add_trace(
        data = data_trace,
        x = ~altura_questionario, 
        y = ~ambulancia_count, 
        type = 'bar', 
        name = paste(agrupamentos[j]),
        text = ~paste(round(ambulancia_percent, 1), "%"),
        textposition = 'auto',
        hoverinfo = 'text',
        color = ~agrupamento_escolas,  # Agrupamentos usados para diferenciar cores
                  colors = c("A1" = "#B0C4DE", 
                             "A2" = "#CAE1FF", 
                             "B1" = "#87CEFA", 
                             "B2" = "#A4D3EE", 
                             "C1" = "#FFA07A", 
                             "C2" = "#FFA07A", 
                             "C3" = "#EE9572", 
                             "D1" = "#DEDEDE", 
                             "D2" = "#CFCFCF", 
                             "D3" = "#CDC9C9", 
                             "D4" = "#8B8989", 
                             "E1" = "pink", 
                             "E2" = "pink3", 
                             "E3" = "pink4"),
        visible = ifelse(i == 1, TRUE, FALSE)  # Exibir apenas a primeira UCC no início
      )
  }
}

# Configurar apenas o menu dropdown para selecionar UCC
fig_ambulancia <- fig_ambulancia %>%
  layout(
    title = "Qual o número que devemos ligar para uma emergência?",
    xaxis = list(title = "Altura do Questionário"),
    yaxis = list(title = "Percentagem de respostas corretas"),
    barmode = 'group',
    
    # Menu para selecionar UCC
    updatemenus = list(
      list(
        type = "dropdown",
        active = 0,
        buttons = lapply(seq_along(uccs), function(i) {
          list(
            method = "update",
            args = list(
              list(visible = rep(uccs[i] == uccs, each = length(agrupamentos))),
              list(title = paste("Respostas corretas obtidas pela UCC", uccs[i]))
            ),
            label = paste("UCC", uccs[i])
          )
        }) %>% append(list(
                           list(
                                method = "update",
                                args = list(
                                            list(visible = rep(TRUE, 
                                              length(uccs) * length(agrupamentos))),
                      list(title = "Respostas corretas obtidas por todas as UCC's")),
            label = "Todas as UCC's")
        ))
      )
    ),
    showlegend = TRUE,
     legend = list(title = list(
                                text = "Agrupamentos de Escolas",  # Título da legenda
                                font = list(size = 14),
                                side = "top")))


fig_ambulancia


```

# Sumário {orientation="columns"}

## Column 

```{r}
#| title: Sumário
#| message: false
#| warning: false
#| echo: false  # Oculta o código, exibe apenas a tabela
#| output: asis
#| results: asis

tabela1 <- tbl_summary(
  inquerito_AVC_2024,
  include = c(sexo, ucc, agrupamento_escolas, numero_emergencia),
  by = altura_questionario,
  missing = "no"
) |> 
  modify_spanning_header(c("stat_1", "stat_2") ~ "**Intervenção**") |> 
  add_n() |> 
  add_p() |> 
  modify_header(label = "**Variável**") |> 
  as_flex_table()  



```
